[NAME]
SetWindowLong
[DESCRIPTION]
The SetWindowLong function changes an attribute of the specified window. The function also sets a 32-bit (long) value at the specified offset into the extra window memory of a window.
[DECLARATION]
Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
[VBNET]
N/A
[OS]
Requires Windows NT 3.1 or later; Requires Windows 95 or later
[LIBRARY]
User32
[PARAMETERS]
· hWnd
Identifies the window and, indirectly, the class to which the window belongs.

· nIndex
Specifies the zero-based offset to the value to be set. Valid values are in the range zero through the number of bytes of extra window memory, minus 4; for example, if you specified 12 or more bytes of extra memory, a value of 8 would be an index to the third 32-bit integer. To set any other value, specify one of the following values:
GWL_EXSTYLE
 Sets a new extended window style.
GWL_STYLE
 Sets a new window style.
GWL_WNDPROC
 Sets a new address for the window procedure.
GWL_HINSTANCE
 Sets a new application instance handle.
GWL_ID
 Sets a new identifier of the window.
GWL_USERDATA
 Sets the 32-bit value associated with the window. Each window has a corresponding 32-bit value intended for use by the application that created the window.

The following values are also available when the hWnd parameter identifies a dialog box:
DWL_DLGPROC
 Sets the new address of the dialog box procedure.
DWL_MSGRESULT
 Sets the return value of a message processed in the dialog box procedure.
DWL_USER
 Sets new extra information that is private to the application, such as handles or pointers.

· dwNewLong
Specifies the replacement value.
[RETURNS]
If the function succeeds, the return value is the previous value of the specified 32-bit integer. 

If the function fails, the return value is zero. To get extended error information, call GetLastError. 

If the previous value of the specified 32-bit integer is zero, and the function succeeds, the return value is zero, but the function does not clear the last error information. This makes it difficult to determine success or failure. To deal with this, you should clear the last error information by calling SetLastError(0) before calling SetWindowLong. Then, function failure will be indicated by a return value of zero and a GetLastError result that is nonzero. 
[EXAMPLES]
Clipboard Viewer*9FE2CF3281A27D4B23955464E2907952.html
Low Level Audio Stream*27E86F6E86FF61338ED21FF2A86FE0D6.html
Number Textbox*2D6E0D802FA00D9363737A1B6CC98D14.html
Classical*2091523979DBEDCAD728958414922C72.html
Download File*B85AACB0E1401DE4D155972D9CC47087.html
Command Style*6087CBE4D1041D4123C21637CE162CBB.html
RTL Tree*18835A9CDD46AB9DE1E10524370F6B44.html
[RELATED]
SetWindowWord
GetWindowLong
